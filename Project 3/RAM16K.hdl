// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel[1]=address[13],sel[0]=address[12],
      a=loadDmuxA,b=loadDmuxB,c=loadDmuxC,d=loadDmuxD);
    RAM4K(in=in, load=loadDmuxA, address[11]=address[11], address[10]=address[10],
      address[9]=address[9],address[8]=address[8],address[7]=address[7],
      address[6]=address[6],address[5]=address[5],address[4]=address[4],
      address[3]=address[3],address[2]=address[2],address[1]=address[1],
      address[0]=address[0], out=ram4kA);
    RAM4K(in=in, load=loadDmuxB, address[11]=address[11], address[10]=address[10],
      address[9]=address[9],address[8]=address[8],address[7]=address[7],
      address[6]=address[6],address[5]=address[5],address[4]=address[4],
      address[3]=address[3],address[2]=address[2],address[1]=address[1],
      address[0]=address[0], out=ram4kB);
    RAM4K(in=in, load=loadDmuxC, address[11]=address[11], address[10]=address[10],
      address[9]=address[9],address[8]=address[8],address[7]=address[7],
      address[6]=address[6],address[5]=address[5],address[4]=address[4],
      address[3]=address[3],address[2]=address[2],address[1]=address[1],
      address[0]=address[0], out=ram4kC);
    RAM4K(in=in, load=loadDmuxD, address[11]=address[11], address[10]=address[10],
      address[9]=address[9],address[8]=address[8],address[7]=address[7],
      address[6]=address[6],address[5]=address[5],address[4]=address[4],
      address[3]=address[3],address[2]=address[2],address[1]=address[1],
      address[0]=address[0], out=ram4kD);
    Mux4Way16(a=ram4kA,b=ram4kB,c=ram4kC,d=ram4kD, sel[1]=address[13],
      sel[0]=address[12], out=out);
}
